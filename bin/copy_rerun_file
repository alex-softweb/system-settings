#! /usr/bin/ruby

class String
  def is_first_test_in_file?
    line_number < 20
  end

  def line_number
    slice(/(?<=:)\d+/).to_i
  end

  def file_name
    slice(/^\w+(?=:)/)
  end
end

def next_test_is_not_from_the_same_file?(test_list)
  current_test = test_list[0]
  next_test = test_list[1]

  next_test.nil? || next_test.file_name != current_test.file_name
end

unless ARGV[0] == '-y'
  print "Confirm: "
  confirmation = gets.chomp
  exit unless confirmation == 'yes'
end
  
source_file_path = 'tmp/rerun.txt'
target_file_path = 'tmp/copy_rerun.txt'

failed_tests_string = File.readlines(source_file_path).first
failed_test_files = failed_tests_string.split(/\s/)

failed_test_files.each_with_index do |string, i|
  if string.match(/:\d+:/)
    file_path = string.slice(/[^:]+/)
    line_numbers = string.scan(/:(\d+)/).flatten
    array = line_numbers.map { |number| "#{ file_path }:#{ number }" }
    failed_test_files[i] = array

  # For first scenario failures rerun entire feature. When the first scenario fails, sometimes the rest of the scenarios in the feature are skipped.
  elsif string.is_first_test_in_file? && next_test_is_not_from_the_same_file?(failed_test_files[i..i+1])
    file_path = string.slice(/[^:]+/)
    failed_test_files[i] = file_path
  end
end

failed_tests_string = failed_test_files.flatten.join(" ")
File.open(target_file_path, 'w') { |f| f.puts failed_tests_string }

puts "File copied"
